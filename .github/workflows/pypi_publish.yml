name: Publish Python distributions to PyPI and TestPyPI

on: push

jobs:
  build_dist:
    name: Build distribution packages
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install twine
        run: python -m pip install wheel setuptools_scm --user
      - name: Build a binary wheel and a source tarball
        run: python setup.py bdist_wheel sdist
      - name: Save dist folder contents as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist_folder
          path: dist/

  publish_to_pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    name: Publish Python distributions to PyPI and TestPyPI
    needs: build_dist
    runs-on: ubuntu-18.04
    steps:
      - name: Download wheel and source distribution from build_dist job
        uses: actions/download-artifact@v2
        with:
          name: dist_folder
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}

  create_github_release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    name: Publish Python distributions to PyPI and TestPyPI
    needs: build_dist
    runs-on: ubuntu-18.04
    steps:
      - name: Download wheel and source distribution from build_dist job
        uses: actions/download-artifact@v2
        with:
          name: dist_folder
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload wheel
        id: upload-release-asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/*